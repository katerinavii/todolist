name: Build and deploy action
on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./app/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/todolist:${{ steps.tag.outputs.tag }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/todolist:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/todolist:buildcache, mode=max~

  deploy:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true
      - name: Decrypt files
        uses: anthonykgross/ansible-vault-cli-github-action@v1
        with:
          vault_key: ${{ secrets.VAULT_PASSWORD }}
          command: "ansible-vault decrypt ./deploy/.env"
#      - name: Render template
#        run: |
#          sudo mv ./deploy/env ./deploy/.env
#          sudo printf "\nTAG_NAME=${{ steps.tag.outputs.tag }}" >> ./deploy/.env
      - name: Copy on server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "deploy/*"
          target: todolist
          strip_components: 1
      - name: Run compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd todolist
            docker compose up -d
      - name: Clear after deploy
        if: always()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            docker system prune -a -f
